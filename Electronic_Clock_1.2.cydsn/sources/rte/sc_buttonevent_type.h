
/*
 * Filename: sc_buttonevent_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 *
 * Description: Signalclass for event leftbutton short press and right button short/long press
 */

#ifndef _H_DEFINE_SC_BUTTONEVENT_TYPE
#define _H_DEFINE_SC_BUTTONEVENT_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SC_BUTTONEVENT_INCLUDES */
#include "uart_bsw.h"
//#include "sp_common.h"
/* USER CODE END SC_BUTTONEVENT_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_BUTTONEVENT signal    
 **********************************************************************/

/* USER CODE START SC_BUTTONEVENT_USERDEFINITIONS */
typedef enum{
    EV_NULL,
    EV_KeyLeft,
    EV_KeyRight,
    EV_RightLongPress,
    EV_1MIN,
    EV_250ms
   } EVENT_t;


typedef enum{
   CheckShortPress,
   CheckLongPress   
    
}ButtonPressStates_t;



/* USER CODE END SC_BUTTONEVENT_USERDEFINITIONS */

//With runnable of 50ms, LPTickFactor=6 will give 300ms wait time for long press to be detected
#define LPTickFactor 6

typedef 
/* USER CODE START SC_BUTTONEVENT_SIGNALDATADEFINITION */
struct
{
	EVENT_t m_ev;
} 
/* USER CODE END SC_BUTTONEVENT_SIGNALDATADEFINITION */
SC_BUTTONEVENT_data_t;

/* USER CODE START InitSC_BUTTONEVENT */
#define SC_BUTTONEVENT_INIT_DATA ((SC_BUTTONEVENT_data_t){EV_NULL})
/* USER CODE END InitSC_BUTTONEVENT */


/**
 * Default IN driver API
 * \param SC_BUTTONEVENT_data_t *const data : [OUT] scaled data read from the driver
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SC_BUTTONEVENT_driverIn(SC_BUTTONEVENT_data_t *const data);




/* USER CODE START SC_BUTTONEVENT_USERFUNCTIONS */


/**
 * Statemachine code for Button long press event  
 * @param ButtonPressStates_t* StateVar - IN Statemachine variable
* @param  uint8_t BUTTONSTATUS - IN Status of the Button
 * @param SC_BUTTONEVENT_data_t* EV_value - OUT Event data
 * @param EVENT_t EV_shortpress,EV_Longpress - IN Event names
 * @return RC_SUCCESS if all ok
 */
RC_t EV_ShortLongPressStateMachine(ButtonPressStates_t* StateVar, uint8_t BUTTONSTATUS, 
    SC_BUTTONEVENT_data_t *const EV_value, EVENT_t EV_shortpress, EVENT_t EV_Longpress );


/* USER CODE END SC_BUTTONEVENT_USERFUNCTIONS */


#endif